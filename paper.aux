\relax 
\citation{chen2016report}
\citation{shor1997polynomial}
\providecommand \oddpage@label [2]{}
\@writefile{toc}{\contentsline {title}{FPGA Key Generation Architectures for Post-Quantum Key Encapsulation Based on Quasi-Cyclic Codes}{1}}
\@writefile{toc}{\authcount {5}}
\@writefile{toc}{\contentsline {author}{Jingwei Hu \and Wen Wang \and Ray Cheung \and San Ling \and Huaxiong Wang}{1}}
\citation{mceliece1978public}
\citation{goppa1970new}
\citation{niederreiter1986knapsack}
\citation{li1994equivalence}
\citation{monico2000using}
\citation{otmani2010cryptanalysis}
\citation{misoczki2009compact}
\citation{londahl2012new}
\citation{baldi2016enhanced}
\citation{loidreau2017new,gaborit2018polynomial}
\citation{baldi2013optimization,baldi2008new,misoczki2013mdpc}
\citation{baldi2018ledakem}
\citation{barreto2017cake}
\citation{aragon2017bike}
\citation{fabvsivc2017reaction,guo2016key}
\citation{nilsson2019error}
\citation{eisenbarth2009microeliece}
\citation{shoufan2010novel}
\citation{ghosh2012speed}
\citation{heyse2012towards}
\citation{wang2017fpga}
\citation{wang2018fpga}
\citation{heyse2013smaller}
\citation{von2014lightweight}
\citation{hu2017area}
\citation{aragon2017bike}
\citation{aragon2017bike}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Parameters for BIKE according to NIST defined security category, referenced from \cite  {aragon2017bike}\relax }}{4}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{table:systempar}{{1}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Preliminaries for BIKE/LEDAkem Key Generation}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}General Definitions}{4}}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces Notations\relax }}{4}}
\newlabel{table:notation}{{2}{4}}
\citation{aragon2017bike}
\citation{pqc2017}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}BIKE}{5}}
\citation{aragon2017bike}
\citation{aragon2017bike}
\citation{aragon2017bike}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces BIKE-1 Key Generation in Polynomial View \cite  {aragon2017bike}\relax }}{6}}
\newlabel{alg:bike1_keygen}{{1}{6}}
\@writefile{loa}{\contentsline {algocf}{\numberline {2}{\ignorespaces BIKE-2 Key Generation in Polynomial View \cite  {aragon2017bike}\relax }}{6}}
\newlabel{alg:bike2_keygen}{{2}{6}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Design parameters for BIKE on lightweight oriented configurable devices}{6}}
\@writefile{loa}{\contentsline {algocf}{\numberline {3}{\ignorespaces BIKE-3 Key Generation in Polynomial View \cite  {aragon2017bike}\relax }}{7}}
\newlabel{alg:bike3_keygen}{{3}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Data Structure}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Polynomial Arithmetics}{7}}
\@writefile{toc}{\contentsline {subsubsection}{Polynomial Inverse}{7}}
\citation{georgieva2015toward}
\citation{hu2015fast}
\newlabel{fig:poly_dense}{{1a}{8}}
\newlabel{sub@fig:poly_dense}{{a}{8}}
\newlabel{fig:poly_sparse}{{1b}{8}}
\newlabel{sub@fig:poly_sparse}{{b}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Polynomial in $\mathbb  {F}_2[x]/(x^r+1)$ represented in different formats\relax }}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Detailed polynomial inversion architecture\relax }}{8}}
\newlabel{fig:inverter}{{2}{8}}
\citation{hu2015fast}
\@writefile{loa}{\contentsline {algocf}{\numberline {4}{\ignorespaces Itoh-Tsujii Inversion Algorithm (ITA) \cite  {hu2015fast}\relax }}{9}}
\newlabel{algo:ITA}{{4}{9}}
\@writefile{toc}{\contentsline {subsubsection}{Squaring in $\mathbb  {F}_2[x]/(x^r+1)$}{9}}
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces An illustrative example for computing polynomial inverse $a^{-1}$ in $\mathbb  {F}_2[x]/(x^r+1)$ with $r=10163$ used in BIKE-2. This table explicitly demonstrates step by step a constat-time execution for inverse.\relax }}{10}}
\newlabel{table:ita_example}{{3}{10}}
\newlabel{fig:L1_ctrl}{{3a}{12}}
\newlabel{sub@fig:L1_ctrl}{{a}{12}}
\newlabel{fig:FLIP_ctrl}{{3b}{12}}
\newlabel{sub@fig:FLIP_ctrl}{{b}{12}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Barrel shifter used in our key generator to ensure constant execution of multiplication and squaring\relax }}{12}}
\newlabel{fig:pipeline_squ}{{4a}{12}}
\newlabel{sub@fig:pipeline_squ}{{a}{12}}
\newlabel{fig:pipeline_squ2}{{4b}{12}}
\newlabel{sub@fig:pipeline_squ2}{{b}{12}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Timing diagram used in continuous square\relax }}{12}}
\@writefile{toc}{\contentsline {subsubsection}{Generic Multiplication in $\mathbb  {F}_2[x]/(x^r+1)$}{12}}
\newlabel{fig:pipeline_gmul}{{5a}{13}}
\newlabel{sub@fig:pipeline_gmul}{{a}{13}}
\newlabel{fig:pipeline_gmul2}{{5b}{13}}
\newlabel{sub@fig:pipeline_gmul2}{{b}{13}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Timing diagram used in generic multiplication\relax }}{13}}
\@writefile{loa}{\contentsline {algocf}{\numberline {5}{\ignorespaces Proposed generic multiplication algorithm\relax }}{14}}
\newlabel{alg:generic_mul}{{5}{14}}
\newlabel{fig:gmul_ill1}{{6a}{14}}
\newlabel{sub@fig:gmul_ill1}{{a}{14}}
\newlabel{fig:gmul_ill2}{{6b}{14}}
\newlabel{sub@fig:gmul_ill2}{{b}{14}}
\newlabel{fig:gmul_ill3}{{6c}{14}}
\newlabel{sub@fig:gmul_ill3}{{c}{14}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Illustration for the proposed generic multiplication algorithm\relax }}{14}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces architectural overview of the core unit in the generic multiplication\relax }}{15}}
\newlabel{fig:gmul_core}{{7}{15}}
\@writefile{lot}{\contentsline {table}{\numberline {4}{\ignorespaces Cycle counts for extracting $d$ bits of $x^ib(x)$ in Sparse-Times-Dense Multiplication\relax }}{15}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Sparse-Times-Dense Multiplication in $\mathbb  {F}_2[x]/(x^r+1)$}{15}}
\@writefile{lot}{\contentsline {table}{\numberline {5}{\ignorespaces Cycle counts comparison between unoptimized and optimized sparse-times-dense multiplication. The pipelined architecture introduces about 50\% reduction of cycle counts for all BIKE instances\relax }}{16}}
\newlabel{fig:L1_ctrl}{{8a}{16}}
\newlabel{sub@fig:L1_ctrl}{{a}{16}}
\newlabel{fig:FLIP_ctrl}{{8b}{16}}
\newlabel{sub@fig:FLIP_ctrl}{{b}{16}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Barrel shifter used in our key generator to ensure constant execution of multiplication and squaring\relax }}{16}}
\newlabel{fig:pipeline_mul}{{9a}{16}}
\newlabel{sub@fig:pipeline_mul}{{a}{16}}
\newlabel{fig:pipeline_mul2}{{9b}{16}}
\newlabel{sub@fig:pipeline_mul2}{{b}{16}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Timing diagram used in sparse-times-dense multiplication\relax }}{16}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Generation of Polynomials in $\mathbb  {F}_2[x]/(x^r+1)$ with Prescribed Weight}{16}}
\@writefile{loa}{\contentsline {algocf}{\numberline {6}{\ignorespaces Generation of a random polynomial with odd weight\relax }}{17}}
\newlabel{alg:prng1}{{6}{17}}
\@writefile{loa}{\contentsline {algocf}{\numberline {7}{\ignorespaces Generation of a random sparse polynomial with given (odd) weight\relax }}{17}}
\newlabel{alg:prng2}{{7}{17}}
\citation{laue2007compact,cherkaoui2013very}
\@writefile{lot}{\contentsline {table}{\numberline {6}{\ignorespaces Cycle counts for generating one entry of a random polynomial with odd weight\relax }}{18}}
\@writefile{lot}{\contentsline {table}{\numberline {7}{\ignorespaces Cycle counts for generating the i-th entry (i=1,2,...) of a random sparse polynomial with odd weight\relax }}{18}}
\@writefile{lot}{\contentsline {table}{\numberline {8}{\ignorespaces Success Rate for generating a random polynomial with odd weight using Alg.\nobreakspace  {}\G@refundefinedtrue \text  {\normalfont  \bfseries  ??}\GenericWarning  {               }{LaTeX Warning: Reference `table:success_rate' on page 19 undefined}\relax }}{19}}
\@writefile{lot}{\contentsline {table}{\numberline {9}{\ignorespaces Cycle counts for generating the sparse polynomial $h_0/h_1$ in BIKE KeyGen\relax }}{19}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Key Generator Architecture}{19}}
\newlabel{fig:pipeline_rng}{{10a}{20}}
\newlabel{sub@fig:pipeline_rng}{{a}{20}}
\newlabel{fig:pipeline_rng2}{{10b}{20}}
\newlabel{sub@fig:pipeline_rng2}{{b}{20}}
\newlabel{fig:pipeline_rng3}{{10c}{20}}
\newlabel{sub@fig:pipeline_rng3}{{c}{20}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces Timing diagram used for generating a random polynomial with odd weight\relax }}{20}}
\newlabel{fig:bike1}{{11a}{21}}
\newlabel{sub@fig:bike1}{{a}{21}}
\newlabel{fig:bike2}{{11b}{21}}
\newlabel{sub@fig:bike2}{{b}{21}}
\newlabel{fig:bike3}{{11c}{21}}
\newlabel{sub@fig:bike3}{{c}{21}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces Overview of the proposed BIKE architectures\relax }}{21}}
\@writefile{lot}{\contentsline {table}{\numberline {10}{\ignorespaces Implementation results of BIKE on a Xilinx Virtex-7 XC7V585T FPGA and a Xilinx Spartan-7 XC7S50 FPGA after the place and route process.\relax }}{21}}
\newlabel{table:expresult}{{10}{21}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Performance Evaluations}{21}}
\citation{aragon2017bike}
\citation{von2014lightweight}
\citation{maurich2015implementing}
\citation{maurich2015implementing}
\citation{drucker2017toolbox}
\citation{drucker2017toolbox}
\citation{aragon2017bike}
\citation{drucker2017toolbox}
\citation{aragon2017bike}
\citation{drucker2017toolbox}
\citation{maurich2015implementing}
\citation{aragon2017bike}
\citation{wang2018fpga}
\citation{wang2018fpga}
\citation{shoufan2010novel}
\citation{wang2018fpga,shoufan2010novel}
\citation{wang2018fpga}
\citation{wang2018fpga}
\@writefile{lot}{\contentsline {table}{\numberline {11}{\ignorespaces Performance comparison of our FPGA implementation with dedicate software implementations.\relax }}{23}}
\newlabel{table:compare}{{11}{23}}
\@writefile{lot}{\contentsline {table}{\numberline {12}{\ignorespaces Performance comparison of our FPGA implementation with other code-based key generators.\relax }}{23}}
\newlabel{table:compare}{{12}{23}}
\bibstyle{abbrv}
\bibdata{./reference}
\@writefile{toc}{\contentsline {section}{\numberline {5}Conclusions}{24}}
