\relax 
\citation{chen2016report}
\citation{shor1997polynomial}
\citation{mceliece1978public}
\citation{goppa1970new}
\citation{niederreiter1986knapsack}
\citation{li1994equivalence}
\@writefile{toc}{\contentsline {title}{FPGA-Based Key Generator for Post-Quantum Key Encapsulation Based on Quasi-Cyclic Codes}{1}}
\@writefile{toc}{\authcount {1}}
\@writefile{toc}{\contentsline {author}{No Author Given}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\citation{monico2000using}
\citation{otmani2010cryptanalysis}
\citation{misoczki2009compact}
\citation{londahl2012new}
\citation{baldi2016enhanced}
\citation{loidreau2017new,gaborit2018polynomial}
\citation{baldi2013optimization,baldi2008new,misoczki2013mdpc}
\citation{baldi2018ledakem}
\citation{barreto2017cake}
\citation{aragon2017bike}
\citation{fabvsivc2017reaction,guo2016key}
\citation{nilsson2019error}
\@writefile{toc}{\contentsline {paragraph}{Contributions.}{2}}
\citation{aragon2017bike}
\@writefile{toc}{\contentsline {section}{\numberline {2}Preliminaries}{3}}
\newlabel{sec::prelim}{{2}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}General Definitions}{3}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Notations\relax }}{3}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{table:notation}{{1}{3}}
\newlabel{tab::definition}{{1}{3}}
\citation{aragon2017bike}
\citation{barreto2017cake}
\citation{deneuville2017ouroboros}
\citation{aragon2017bike}
\citation{aragon2017bike}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}BIKE}{4}}
\citation{aragon2017bike}
\citation{aragon2017bike}
\citation{aragon2017bike}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces Parameters for BIKE, referenced from \cite  {aragon2017bike}\relax }}{5}}
\newlabel{table:systempar}{{2}{5}}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces BIKE-1 key generation algorithm in polynomial view \cite  {aragon2017bike}\relax }}{5}}
\newlabel{alg:bike1_keygen}{{1}{5}}
\@writefile{loa}{\contentsline {algocf}{\numberline {2}{\ignorespaces BIKE-2 key generation algorithm in polynomial view \cite  {aragon2017bike}\relax }}{5}}
\newlabel{alg:bike2_keygen}{{2}{5}}
\@writefile{loa}{\contentsline {algocf}{\numberline {3}{\ignorespaces BIKE-3 key generation algorithm in polynomial view \cite  {aragon2017bike}\relax }}{6}}
\newlabel{alg:bike3_keygen}{{3}{6}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Polynomial Arithmetics}{6}}
\newlabel{sec::modules}{{3}{6}}
\@writefile{toc}{\contentsline {paragraph}{Polynomial Representations.}{6}}
\newlabel{fig:poly_dense}{{1a}{7}}
\newlabel{sub@fig:poly_dense}{{a}{7}}
\newlabel{fig:poly_sparse}{{1b}{7}}
\newlabel{sub@fig:poly_sparse}{{b}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Polynomial in $\mathbb  {F}_2[x]/(x^r+1)$ represented in different formats\relax }}{7}}
\newlabel{fig::shifter}{{1}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Polynomial Squaring}{7}}
\newlabel{sub::square}{{3.1}{7}}
\citation{chou2016qcbits,drucker2017toolbox}
\newlabel{fig:barrel1}{{2a}{8}}
\newlabel{sub@fig:barrel1}{{a}{8}}
\newlabel{fig:barrel2}{{2b}{8}}
\newlabel{sub@fig:barrel2}{{b}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Barrel shifter used in our key generator to ensure constant execution of multiplication and squaring\relax }}{8}}
\newlabel{fig:pipeline_squ}{{3a}{8}}
\newlabel{sub@fig:pipeline_squ}{{a}{8}}
\newlabel{fig:pipeline_squ2}{{3b}{8}}
\newlabel{sub@fig:pipeline_squ2}{{b}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Timing diagram used in continuous square\relax }}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Generic Polynomial Multiplication}{8}}
\newlabel{sub::dense}{{3.2}{8}}
\@writefile{loa}{\contentsline {algocf}{\numberline {4}{\ignorespaces Proposed generic multiplication algorithm\relax }}{9}}
\newlabel{alg:generic_mul}{{4}{9}}
\newlabel{fig:pipeline_gmul}{{4a}{10}}
\newlabel{sub@fig:pipeline_gmul}{{a}{10}}
\newlabel{fig:pipeline_gmul2}{{4b}{10}}
\newlabel{sub@fig:pipeline_gmul2}{{b}{10}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Timing diagram used in generic multiplication\relax }}{10}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Architectural overview of the core unit MUL in the generic multiplication\relax }}{11}}
\newlabel{fig:gmul_core}{{5}{11}}
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces Cycle count comparisons between unoptimized and optimized sparse polynomial multiplication modules.\relax }}{11}}
\newlabel{tab::sparse}{{3}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Sparse Polynomial Multiplication}{11}}
\newlabel{sub::sparse}{{3.3}{11}}
\citation{hu2015fast}
\citation{georgieva2015toward}
\newlabel{fig:pipeline_mul}{{6a}{12}}
\newlabel{sub@fig:pipeline_mul}{{a}{12}}
\newlabel{fig:pipeline_mul2}{{6b}{12}}
\newlabel{sub@fig:pipeline_mul2}{{b}{12}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Timing diagram used in sparse polynomial multiplication\relax }}{12}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}Polynomial Inversion}{12}}
\newlabel{sub::inversion}{{3.4}{12}}
\@writefile{loa}{\contentsline {algocf}{\numberline {5}{\ignorespaces Itoh-Tsujii Inversion Algorithm (ITA) \cite  {hu2015fast}\relax }}{13}}
\newlabel{algo:ITA}{{5}{13}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Diagram of the polynomial inversion architecture\relax }}{13}}
\newlabel{fig:inverter}{{7}{13}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5}Generation of Polynomials with Prescribed Weight}{13}}
\newlabel{sub::polygen}{{3.5}{13}}
\@writefile{loa}{\contentsline {algocf}{\numberline {6}{\ignorespaces Generation of a random polynomial with odd weight\relax }}{14}}
\newlabel{alg:prng1}{{6}{14}}
\@writefile{loa}{\contentsline {algocf}{\numberline {7}{\ignorespaces Generation of a random sparse polynomial with given (odd) weight\relax }}{14}}
\newlabel{alg:prng2}{{7}{14}}
\citation{laue2007compact,cherkaoui2013very}
\@writefile{lot}{\contentsline {table}{\numberline {4}{\ignorespaces Success Rate for generating a random polynomial with odd weight using Algorithm\nobreakspace  {}7\hbox {}\relax }}{15}}
\newlabel{table:success_rate}{{4}{15}}
\@writefile{lot}{\contentsline {table}{\numberline {5}{\ignorespaces Cycle count for generating the sparse polynomial $h_0/h_1$ in BIKE KeyGen\relax }}{15}}
\newlabel{table:spare_ploy_gen}{{5}{15}}
\newlabel{fig:bike1}{{8a}{16}}
\newlabel{sub@fig:bike1}{{a}{16}}
\newlabel{fig:bike2}{{8b}{16}}
\newlabel{sub@fig:bike2}{{b}{16}}
\newlabel{fig:bike3}{{8c}{16}}
\newlabel{sub@fig:bike3}{{c}{16}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Overview of the proposed BIKE architectures\relax }}{16}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Key Generator Architecture}{16}}
\newlabel{sec::keygen}{{4}{16}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Performance Evaluations}{17}}
\newlabel{sec::evaluation}{{5}{17}}
\citation{eisenbarth2009microeliece,shoufan2010novel,ghosh2012speed,heyse2012towards,wang2017fpga,wang2018fpga}
\citation{wang2018fpga}
\citation{wang2017fpga}
\citation{bernstein2019classic}
\@writefile{lot}{\contentsline {table}{\numberline {6}{\ignorespaces Performance results of BIKE key generators on a Xilinx Virtex-7 XC7V585T FPGA and a Xilinx Spartan-7 XC7S50 FPGA.\relax }}{18}}
\newlabel{table:expresult}{{6}{18}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Related Work}{18}}
\citation{heyse2013smaller,von2014lightweight,hu2017area}
\citation{aragon2017bike}
\citation{aragon2017bike}
\citation{aragon2017bike}
\citation{drucker2017toolbox}
\citation{drucker2017toolbox}
\citation{drucker2017toolbox}
\citation{wang2018fpga}
\citation{wang2018fpga}
\citation{bernstein2019classic}
\citation{aragon2017bike}
\citation{drucker2017toolbox}
\citation{aragon2017bike}
\citation{drucker2017toolbox}
\citation{aragon2017bike}
\@writefile{lot}{\contentsline {table}{\numberline {7}{\ignorespaces Performance comparison of our FPGA implementation with other code-based key generators.\relax }}{19}}
\newlabel{table:compare}{{7}{19}}
\bibstyle{abbrv}
\bibdata{./reference}
\bibcite{aragon2017bike}{1}
\bibcite{baldi2018ledakem}{2}
\bibcite{baldi2013optimization}{3}
\bibcite{baldi2016enhanced}{4}
\bibcite{baldi2008new}{5}
\bibcite{barreto2017cake}{6}
\@writefile{lot}{\contentsline {table}{\numberline {8}{\ignorespaces Performance comparison of our FPGA implementation with dedicate software implementations.\relax }}{20}}
\newlabel{table:compare}{{8}{20}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Conclusions}{20}}
\newlabel{sec::conclusion}{{7}{20}}
\bibcite{bernstein2019classic}{7}
\bibcite{chen2016report}{8}
\bibcite{cherkaoui2013very}{9}
\bibcite{chou2016qcbits}{10}
\bibcite{deneuville2017ouroboros}{11}
\bibcite{drucker2017toolbox}{12}
\bibcite{eisenbarth2009microeliece}{13}
\bibcite{fabvsivc2017reaction}{14}
\bibcite{gaborit2018polynomial}{15}
\bibcite{georgieva2015toward}{16}
\bibcite{ghosh2012speed}{17}
\bibcite{goppa1970new}{18}
\bibcite{guo2016key}{19}
\bibcite{heyse2012towards}{20}
\bibcite{heyse2013smaller}{21}
\bibcite{hu2017area}{22}
\bibcite{hu2015fast}{23}
\bibcite{laue2007compact}{24}
\bibcite{li1994equivalence}{25}
\bibcite{loidreau2017new}{26}
\bibcite{londahl2012new}{27}
\bibcite{mceliece1978public}{28}
\bibcite{misoczki2009compact}{29}
\bibcite{misoczki2013mdpc}{30}
\bibcite{monico2000using}{31}
\bibcite{niederreiter1986knapsack}{32}
\bibcite{nilsson2019error}{33}
\bibcite{otmani2010cryptanalysis}{34}
\bibcite{shor1997polynomial}{35}
\bibcite{shoufan2010novel}{36}
\bibcite{von2014lightweight}{37}
\bibcite{wang2017fpga}{38}
\bibcite{wang2018fpga}{39}
\@writefile{toc}{\contentsline {subsubsection}{Illustrative example for constant-time ITA used in BIKE.}{24}}
\@writefile{lot}{\contentsline {table}{\numberline {9}{\ignorespaces An illustrative example for computing polynomial inverse $a^{-1}$ in $\mathbb  {F}_2[x]/(x^r+1)$ with $r=10163$ used in BIKE-2. This table explicitly demonstrates step by step a constat-time execution for inverse.\relax }}{24}}
\newlabel{table:ita_example}{{9}{24}}
\@writefile{toc}{\contentsline {subsubsection}{Proof of Theorem\nobreakspace  {}1.}{24}}
\@writefile{toc}{\contentsline {subsubsection}{Remarks on generic multiplication.}{25}}
\newlabel{fig:gmul_ill1}{{9a}{26}}
\newlabel{sub@fig:gmul_ill1}{{a}{26}}
\newlabel{fig:gmul_ill2}{{9b}{26}}
\newlabel{sub@fig:gmul_ill2}{{b}{26}}
\newlabel{fig:gmul_ill3}{{9c}{26}}
\newlabel{sub@fig:gmul_ill3}{{c}{26}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Illustration for the proposed generic multiplication algorithm\relax }}{26}}
